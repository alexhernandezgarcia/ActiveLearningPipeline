device : "cpu"
debug : True
al:
  n_iter: 10
  queries_per_it: 100

path :
  data_oracle : "./storage/data_oracle/database.npy"
  model_proxy : "./storage/model_proxy/proxy"
  model_gfn : "./storage/model_gfn/gfn"
  model_oracle_MLP : "./storage/model_oracle/oracle_MLP"

env:
  main : "aptamers"
  dict_size : 4
  min_len : 10
  max_len : 15
  min_word_len : 1
  max_word_len : 1
  #TODO : add parameters to define the number of fidelities (and maybe conventions 0 : first best fidelity,..., total_best_fidelities - 1: worst fidelity, ...)
  total_fidelities : 3

oracle:
  # The oracle will be different. We have to think how each oracle will handle multi-fidelity 
  # --> hard-coded (transformers vs mlp, ...) : that would be okay for a fix number of fidelities (3 : mlp, lstm, transformer trained oracles)
  # --> parametrized (nupack with a noise parameter for instance) : that would allow for any number of different fidelity oracles, but then the noises would be defined in the OracleClass
  # The costs for each sub_oracle (each fidelity) can be modified either in the config file (for tests purposes), either in the oracle itself (that will be the case for the final oracles we will use)
  main : "toy"
  init_dataset:
    seed : 0
    init_len : 100
  
proxy:
  model : "mlp" #the architecture is specified in ProxyMLP class
  training:
    eps : 1.0e-4
    dropout : 0.1
    max_epochs : 200
    training_batch : 10
    history : 20
  data:
    shuffle: True
    seed : 10

gflownet:
  #TODO : just an idea for now, but in the best scenario to compare chosing the fidelity at the end or at the middle, we can a parameter
  #fidelity_choice : "middle" or "end"
  policy_model : "mlp"
  loss : 
    function: "flowmatch"
    flowmatch_eps: 1.0e-10
  view_progress : True
  sampling:
    temperature : 1
    seed : 1
    random_action_prob : 0.2
  training:
    pct_batch_empirical : 0.1
    batch_size : 16
    training_steps : 10
    clip_grad_norm : 10
    dropout: 0.1
    opt : "adam"
    adam_beta1 : 0.9
    adam_beta2 : 0.99
    momentum : 0.8
    learning_rate : 1.0e-3
    lr_decay_period : 1.0e+6
    lr_decay_gamma : 0.75
    ttsr : 3

acquisition:
  #MES, ... + related parameters to add
  main: "proxy"
  

  

    


